AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  DomainName:
    Type: String
  S3CanonicalUser:
    Type: String
  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
  SslCertificate:
    Type: String

Description:
  Terry static site

Resources:
  WebsiteBucket:
    Type: "AWS::S3::Bucket"
  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Statement:
          - Action:
              - "s3:GetObject"
            Effect: Allow
            Resource:
              - !Sub "${WebsiteBucket.Arn}/*"
            Principal:
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${S3CanonicalUser}"
  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          DefaultTTL: 60
          ForwardedValues:
            QueryString: false
          TargetOriginId: s3
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        Origins:
          - Id: s3
            DomainName: !GetAtt WebsiteBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${S3CanonicalUser}"
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: !Ref SslCertificate
          SslSupportMethod: sni-only
  WebsiteRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt Distribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
      HostedZoneId: !Ref HostedZoneId
      Name: !Sub "${DomainName}."
      Type: A
