plugins:
  - serverless-iam-roles-per-function

service:
  name: eurosight

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-west-1'}
  cfnRole: ${cf:${self:service}-iam.CloudformationDeploymentRoleOutput}
  websocketsApiRouteSelectionExpression: $request.body.action

functions:
  connect:
    handler: index.connect
    events:
      - websocket: $connect
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: !GetAtt EurosightTable.Arn
    environment:
      TABLE_NAME: !Ref EurosightTable

  disconnect:
    handler: index.disconnect
    events:
      - websocket: $disconnect
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: !GetAtt EurosightTable.Arn
    environment:
      TABLE_NAME: !Ref EurosightTable

  vote:
    handler: index.vote
    events:
      - websocket: vote
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: !GetAtt EurosightTable.Arn
    environment:
      TABLE_NAME: !Ref EurosightTable

  processChange:
    handler: index.processChange
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt: [EurosightTable, StreamArn]

resources:
  Resources:
    EurosightTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: Event
            AttributeType: S
          - AttributeName: Type
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: Event
            KeyType: HASH
          - AttributeName: Type
            KeyType: RANGE
        StreamSpecification:
          StreamViewType: NEW_IMAGE
